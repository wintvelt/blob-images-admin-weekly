# NOTE: update this with your service name
service: blob-images-admin-weekly

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  environment:     
    photoTable: ${file(./serverlessDomainConfig.js):photoTable.${self:provider.stage}}
    coverIndex: cover-idx
    photoIndex: SK-PK-idx
    emailIndex: email-idx
    cognitoIndex: cog-idx
    dateIndex: date-idx
    flaggedIndex: flagged-idx
    frontend: ${file(./serverlessDomainConfig.js):frontend.${self:provider.stage}}
    stage: ${self:provider.stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeStream
            - dynamodb:ListStreams
          Resource: "arn:aws:dynamodb:eu-central-1:*:*"
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
            - ses:SendTemplatedEmail
            - ses:SendBulkTemplatedEmail
          Resource: "arn:aws:ses:eu-central-1:*:*"

functions:
  dailyMail:
    handler: handler.main
    events:
      # - http:
      #     path: /
      #     method: get
      - schedule: cron(0 10 * * ? *) # daily at 10am
  flaggedMail:
    handler: handlerFlagged.main
    events:
      # - http:
      #     path: /
      #     method: get
      - schedule: cron(0 8 * * ? *) # daily at 8am